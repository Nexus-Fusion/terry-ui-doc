"use strict";(self.webpackChunkmy_app=self.webpackChunkmy_app||[]).push([[983],{"./src/components/ui/select.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Group:()=>Group,GroupWithSeparator:()=>GroupWithSeparator,__namedExportsOrder:()=>__namedExportsOrder,default:()=>select_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),dist=__webpack_require__("./node_modules/@radix-ui/react-select/dist/index.mjs"),chevron_down=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/chevron-down.js"),chevron_up=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/chevron-up.js"),check=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/check.js"),utils=__webpack_require__("./src/lib/utils.ts");const Select=dist.bL,SelectGroup=dist.YJ,SelectValue=dist.WT,SelectTrigger=react.forwardRef((({className,children,...props},ref)=>(0,jsx_runtime.jsxs)(dist.l9,{ref,className:(0,utils.cn)("flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1 text-black",className),...props,children:[children,(0,jsx_runtime.jsx)(dist.In,{asChild:!0,children:(0,jsx_runtime.jsx)(chevron_down.A,{className:"h-4 w-4 opacity-50"})})]})));SelectTrigger.displayName=dist.l9.displayName;const SelectScrollUpButton=react.forwardRef((({className,...props},ref)=>(0,jsx_runtime.jsx)(dist.PP,{ref,className:(0,utils.cn)("flex cursor-default items-center justify-center py-1",className),...props,children:(0,jsx_runtime.jsx)(chevron_up.A,{className:"h-4 w-4"})})));SelectScrollUpButton.displayName=dist.PP.displayName;const SelectScrollDownButton=react.forwardRef((({className,...props},ref)=>(0,jsx_runtime.jsx)(dist.wn,{ref,className:(0,utils.cn)("flex cursor-default items-center justify-center py-1",className),...props,children:(0,jsx_runtime.jsx)(chevron_down.A,{className:"h-4 w-4"})})));SelectScrollDownButton.displayName=dist.wn.displayName;const SelectContent=react.forwardRef((({className,children,position="popper",...props},ref)=>(0,jsx_runtime.jsx)(dist.ZL,{children:(0,jsx_runtime.jsxs)(dist.UC,{ref,className:(0,utils.cn)("relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]","popper"===position&&"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",className),position,...props,children:[(0,jsx_runtime.jsx)(SelectScrollUpButton,{}),(0,jsx_runtime.jsx)(dist.LM,{className:(0,utils.cn)("p-1","popper"===position&&"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"),children}),(0,jsx_runtime.jsx)(SelectScrollDownButton,{})]})})));SelectContent.displayName=dist.UC.displayName;const SelectLabel=react.forwardRef((({className,...props},ref)=>(0,jsx_runtime.jsx)(dist.JU,{ref,className:(0,utils.cn)("px-2 py-1.5 text-sm font-semibold",className),...props})));SelectLabel.displayName=dist.JU.displayName;const SelectItem=react.forwardRef((({className,children,...props},ref)=>(0,jsx_runtime.jsxs)(dist.q7,{ref,className:(0,utils.cn)("relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",className),...props,children:[(0,jsx_runtime.jsx)("span",{className:"absolute right-2 flex h-3.5 w-3.5 items-center justify-center",children:(0,jsx_runtime.jsx)(dist.VF,{children:(0,jsx_runtime.jsx)(check.A,{className:"h-4 w-4"})})}),(0,jsx_runtime.jsx)(dist.p4,{children})]})));SelectItem.displayName=dist.q7.displayName;const SelectSeparator=react.forwardRef((({className,...props},ref)=>(0,jsx_runtime.jsx)(dist.wv,{ref,className:(0,utils.cn)("-mx-1 my-1 h-px bg-muted",className),...props})));SelectSeparator.displayName=dist.wv.displayName,SelectTrigger.__docgenInfo={description:"",methods:[]},SelectContent.__docgenInfo={description:"",methods:[],props:{position:{defaultValue:{value:'"popper"',computed:!1},required:!1}}},SelectLabel.__docgenInfo={description:"",methods:[]},SelectItem.__docgenInfo={description:"",methods:[]},SelectSeparator.__docgenInfo={description:"",methods:[]},SelectScrollUpButton.__docgenInfo={description:"",methods:[]},SelectScrollDownButton.__docgenInfo={description:"",methods:[]};const select_stories={title:"Example/Select",component:Select,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{},args:{}},Basic={render:args=>(0,jsx_runtime.jsx)("div",{className:"flex justify-center items-center w-[400px]",children:(0,jsx_runtime.jsxs)(Select,{children:[(0,jsx_runtime.jsx)(SelectTrigger,{children:(0,jsx_runtime.jsx)(SelectValue,{placeholder:"Select"})}),(0,jsx_runtime.jsx)(SelectContent,{children:[{value:"new_york",label:"New York"},{value:"toronto",label:"Toronto"},{value:"vancouver",label:"Vancouver"}].map((option=>(0,jsx_runtime.jsx)(SelectItem,{value:option.value,children:option.label},option.value)))})]})})},Group={render:args=>(0,jsx_runtime.jsx)("div",{className:"flex justify-center items-center w-[400px]",children:(0,jsx_runtime.jsxs)(Select,{children:[(0,jsx_runtime.jsx)(SelectTrigger,{children:(0,jsx_runtime.jsx)(SelectValue,{placeholder:"Selecione um respons치vel"})}),(0,jsx_runtime.jsx)(SelectContent,{children:(0,jsx_runtime.jsxs)(SelectGroup,{children:[(0,jsx_runtime.jsx)(SelectLabel,{children:"North America"}),[{value:"new_york",label:"New York"},{value:"toronto",label:"Toronto"},{value:"vancouver",label:"Vancouver"}].map((option=>(0,jsx_runtime.jsx)(SelectItem,{value:option.value,children:option.label},option.value)))]})})]})})},GroupWithSeparator={render:args=>(0,jsx_runtime.jsx)("div",{className:"flex justify-center items-center w-[400px]",children:(0,jsx_runtime.jsxs)(Select,{children:[(0,jsx_runtime.jsx)(SelectTrigger,{children:(0,jsx_runtime.jsx)(SelectValue,{placeholder:"Selecione um respons치vel"})}),(0,jsx_runtime.jsxs)(SelectContent,{children:[(0,jsx_runtime.jsxs)(SelectGroup,{children:[(0,jsx_runtime.jsx)(SelectLabel,{children:"North America"}),[{value:"new_york",label:"New York"},{value:"toronto",label:"Toronto"},{value:"vancouver",label:"Vancouver"}].map((option=>(0,jsx_runtime.jsx)(SelectItem,{value:option.value,children:option.label},option.value)))]}),(0,jsx_runtime.jsx)(SelectSeparator,{}),(0,jsx_runtime.jsxs)(SelectGroup,{children:[(0,jsx_runtime.jsx)(SelectLabel,{children:"North America 2"}),[{value:"new_york",label:"New York"},{value:"toronto",label:"Toronto"},{value:"vancouver",label:"Vancouver"}].map((option=>(0,jsx_runtime.jsx)(SelectItem,{value:option.value,children:option.label},option.value)))]})]})]})})},__namedExportsOrder=["Basic","Group","GroupWithSeparator"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    return <div className="flex justify-center items-center w-[400px]">\n        <Select>\n          <SelectTrigger>\n            <SelectValue placeholder={`Select`} />\n          </SelectTrigger>\n          <SelectContent>\n            {[{\n            value: "new_york",\n            label: "New York"\n          }, {\n            value: "toronto",\n            label: "Toronto"\n          }, {\n            value: "vancouver",\n            label: "Vancouver"\n          }].map(option => <SelectItem key={option.value} value={option.value}>\n                {option.label}\n              </SelectItem>)}\n          </SelectContent>\n        </Select>\n      </div>;\n  }\n}',...Basic.parameters?.docs?.source}}},Group.parameters={...Group.parameters,docs:{...Group.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    return <div className="flex justify-center items-center w-[400px]">\n        <Select>\n          <SelectTrigger>\n            <SelectValue placeholder={`Selecione um respons치vel`} />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectGroup>\n              <SelectLabel>North America</SelectLabel>\n              {[{\n              value: "new_york",\n              label: "New York"\n            }, {\n              value: "toronto",\n              label: "Toronto"\n            }, {\n              value: "vancouver",\n              label: "Vancouver"\n            }].map(option => <SelectItem key={option.value} value={option.value}>\n                  {option.label}\n                </SelectItem>)}\n            </SelectGroup>\n          </SelectContent>\n        </Select>\n      </div>;\n  }\n}',...Group.parameters?.docs?.source}}},GroupWithSeparator.parameters={...GroupWithSeparator.parameters,docs:{...GroupWithSeparator.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    return <div className="flex justify-center items-center w-[400px]">\n        <Select>\n          <SelectTrigger>\n            <SelectValue placeholder={`Selecione um respons치vel`} />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectGroup>\n              <SelectLabel>North America</SelectLabel>\n              {[{\n              value: "new_york",\n              label: "New York"\n            }, {\n              value: "toronto",\n              label: "Toronto"\n            }, {\n              value: "vancouver",\n              label: "Vancouver"\n            }].map(option => <SelectItem key={option.value} value={option.value}>\n                  {option.label}\n                </SelectItem>)}\n            </SelectGroup>\n            <SelectSeparator />\n            <SelectGroup>\n              <SelectLabel>North America 2</SelectLabel>\n              {[{\n              value: "new_york",\n              label: "New York"\n            }, {\n              value: "toronto",\n              label: "Toronto"\n            }, {\n              value: "vancouver",\n              label: "Vancouver"\n            }].map(option => <SelectItem key={option.value} value={option.value}>\n                  {option.label}\n                </SelectItem>)}\n            </SelectGroup>\n          </SelectContent>\n        </Select>\n      </div>;\n  }\n}',...GroupWithSeparator.parameters?.docs?.source}}}},"./src/lib/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");function cn(...inputs){return(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))}}}]);